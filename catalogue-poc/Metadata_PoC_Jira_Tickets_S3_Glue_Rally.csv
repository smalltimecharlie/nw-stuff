FormattedID,Description,Platform,PlanEstimate
Setup – Unity Catalog (Databricks on AWS),Enable Unity Catalog in a Databricks workspace running on AWS. Link to S3 buckets and configure the metastore using AWS Glue. Create sample Delta tables and configure workspace audit logging. Assign test roles for ownership and access control.,Unity Catalog,3
Setup – OpenMetadata on AWS (S3/Glue),"Deploy OpenMetadata in an AWS-native environment using EC2 or EKS. Configure ingestion pipelines for Amazon S3 as the storage location and AWS Glue as the metadata catalog. Define test metadata schema including controller, processor, retention policy, and owner fields using custom properties or glossary tags.",OpenMetadata,5
Setup – DataHub on AWS (Glue/Redshift),Deploy DataHub using Docker or Kubernetes in AWS. Ingest metadata from AWS Glue metadata for Amazon S3-based datasets. Test entity lineage and glossary term ingestion using the AWS plugins. Configure test ingestion pipelines and metadata schema validation.,DataHub,5
Unity Catalog – REQ-1,"Evaluate Unity Catalog support for metadata registration at ingestion (controller, processor, retention, owner) in an AWS-native setup focusing on Amazon S3 as the data storage layer, and AWS Glue as the metadata catalog where applicable. Test ingestion of datasets stored in Amazon S3, with metadata schemas registered in AWS Glue, for S3-based objects. Document whether the metadata fields can be captured natively at ingestion or modeled through tags, policies, or glossary extensions. Confirm that metadata is visible in the UI, searchable, filterable, auditable, and enforced where applicable.",Unity Catalog,3
Unity Catalog – REQ-2,"Evaluate Unity Catalog support for audit/filter by controller/processor in an AWS-native setup focusing on Amazon S3 as the data storage layer, and AWS Glue as the metadata catalog where applicable. Test ingestion of datasets stored in Amazon S3, with metadata schemas registered in AWS Glue, for S3-based objects. Document whether the metadata fields can be captured natively at ingestion or modeled through tags, policies, or glossary extensions. Confirm that metadata is visible in the UI, searchable, filterable, auditable, and enforced where applicable.",Unity Catalog,3
Unity Catalog – REQ-3,"Evaluate Unity Catalog support for enforce retention policies with alert/flag in an AWS-native setup focusing on Amazon S3 as the data storage layer, and AWS Glue as the metadata catalog where applicable. Test ingestion of datasets stored in Amazon S3, with metadata schemas registered in AWS Glue, for S3-based objects. Document whether the metadata fields can be captured natively at ingestion or modeled through tags, policies, or glossary extensions. Confirm that metadata is visible in the UI, searchable, filterable, auditable, and enforced where applicable.",Unity Catalog,5
Unity Catalog – REQ-4,"Evaluate Unity Catalog support for link datasets to sharing agreements in an AWS-native setup focusing on Amazon S3 as the data storage layer, and AWS Glue as the metadata catalog where applicable. Test ingestion of datasets stored in Amazon S3, with metadata schemas registered in AWS Glue, for S3-based objects. Document whether the metadata fields can be captured natively at ingestion or modeled through tags, policies, or glossary extensions. Confirm that metadata is visible in the UI, searchable, filterable, auditable, and enforced where applicable.",Unity Catalog,3
Unity Catalog – REQ-5,"Evaluate Unity Catalog support for assign and audit ownership in an AWS-native setup focusing on Amazon S3 as the data storage layer, and AWS Glue as the metadata catalog where applicable. Test ingestion of datasets stored in Amazon S3, with metadata schemas registered in AWS Glue, for S3-based objects. Document whether the metadata fields can be captured natively at ingestion or modeled through tags, policies, or glossary extensions. Confirm that metadata is visible in the UI, searchable, filterable, auditable, and enforced where applicable.",Unity Catalog,2
Unity Catalog – REQ-6,"Evaluate Unity Catalog support for display permitted use in an AWS-native setup focusing on Amazon S3 as the data storage layer, and AWS Glue as the metadata catalog where applicable. Test ingestion of datasets stored in Amazon S3, with metadata schemas registered in AWS Glue, for S3-based objects. Document whether the metadata fields can be captured natively at ingestion or modeled through tags, policies, or glossary extensions. Confirm that metadata is visible in the UI, searchable, filterable, auditable, and enforced where applicable.",Unity Catalog,2
Unity Catalog – REQ-7,"Evaluate Unity Catalog support for block ingestion without mandatory metadata in an AWS-native setup focusing on Amazon S3 as the data storage layer, and AWS Glue as the metadata catalog where applicable. Test ingestion of datasets stored in Amazon S3, with metadata schemas registered in AWS Glue, for S3-based objects. Document whether the metadata fields can be captured natively at ingestion or modeled through tags, policies, or glossary extensions. Confirm that metadata is visible in the UI, searchable, filterable, auditable, and enforced where applicable.",Unity Catalog,4
OpenMetadata – REQ-1,"Evaluate OpenMetadata support for metadata registration at ingestion (controller, processor, retention, owner) in an AWS-native setup focusing on Amazon S3 as the data storage layer, and AWS Glue as the metadata catalog where applicable. Test ingestion of datasets stored in Amazon S3, with metadata schemas registered in AWS Glue, for S3-based objects. Document whether the metadata fields can be captured natively at ingestion or modeled through tags, policies, or glossary extensions. Confirm that metadata is visible in the UI, searchable, filterable, auditable, and enforced where applicable.",OpenMetadata,3
OpenMetadata – REQ-2,"Evaluate OpenMetadata support for audit/filter by controller/processor in an AWS-native setup focusing on Amazon S3 as the data storage layer, and AWS Glue as the metadata catalog where applicable. Test ingestion of datasets stored in Amazon S3, with metadata schemas registered in AWS Glue, for S3-based objects. Document whether the metadata fields can be captured natively at ingestion or modeled through tags, policies, or glossary extensions. Confirm that metadata is visible in the UI, searchable, filterable, auditable, and enforced where applicable.",OpenMetadata,3
OpenMetadata – REQ-3,"Evaluate OpenMetadata support for enforce retention policies with alert/flag in an AWS-native setup focusing on Amazon S3 as the data storage layer, and AWS Glue as the metadata catalog where applicable. Test ingestion of datasets stored in Amazon S3, with metadata schemas registered in AWS Glue, for S3-based objects. Document whether the metadata fields can be captured natively at ingestion or modeled through tags, policies, or glossary extensions. Confirm that metadata is visible in the UI, searchable, filterable, auditable, and enforced where applicable.",OpenMetadata,5
OpenMetadata – REQ-4,"Evaluate OpenMetadata support for link datasets to sharing agreements in an AWS-native setup focusing on Amazon S3 as the data storage layer, and AWS Glue as the metadata catalog where applicable. Test ingestion of datasets stored in Amazon S3, with metadata schemas registered in AWS Glue, for S3-based objects. Document whether the metadata fields can be captured natively at ingestion or modeled through tags, policies, or glossary extensions. Confirm that metadata is visible in the UI, searchable, filterable, auditable, and enforced where applicable.",OpenMetadata,3
OpenMetadata – REQ-5,"Evaluate OpenMetadata support for assign and audit ownership in an AWS-native setup focusing on Amazon S3 as the data storage layer, and AWS Glue as the metadata catalog where applicable. Test ingestion of datasets stored in Amazon S3, with metadata schemas registered in AWS Glue, for S3-based objects. Document whether the metadata fields can be captured natively at ingestion or modeled through tags, policies, or glossary extensions. Confirm that metadata is visible in the UI, searchable, filterable, auditable, and enforced where applicable.",OpenMetadata,2
OpenMetadata – REQ-6,"Evaluate OpenMetadata support for display permitted use in an AWS-native setup focusing on Amazon S3 as the data storage layer, and AWS Glue as the metadata catalog where applicable. Test ingestion of datasets stored in Amazon S3, with metadata schemas registered in AWS Glue, for S3-based objects. Document whether the metadata fields can be captured natively at ingestion or modeled through tags, policies, or glossary extensions. Confirm that metadata is visible in the UI, searchable, filterable, auditable, and enforced where applicable.",OpenMetadata,2
OpenMetadata – REQ-7,"Evaluate OpenMetadata support for block ingestion without mandatory metadata in an AWS-native setup focusing on Amazon S3 as the data storage layer, and AWS Glue as the metadata catalog where applicable. Test ingestion of datasets stored in Amazon S3, with metadata schemas registered in AWS Glue, for S3-based objects. Document whether the metadata fields can be captured natively at ingestion or modeled through tags, policies, or glossary extensions. Confirm that metadata is visible in the UI, searchable, filterable, auditable, and enforced where applicable.",OpenMetadata,4
DataHub – REQ-1,"Evaluate DataHub support for metadata registration at ingestion (controller, processor, retention, owner) in an AWS-native setup focusing on Amazon S3 as the data storage layer, and AWS Glue as the metadata catalog where applicable. Test ingestion of datasets stored in Amazon S3, with metadata schemas registered in AWS Glue, for S3-based objects. Document whether the metadata fields can be captured natively at ingestion or modeled through tags, policies, or glossary extensions. Confirm that metadata is visible in the UI, searchable, filterable, auditable, and enforced where applicable.",DataHub,3
DataHub – REQ-2,"Evaluate DataHub support for audit/filter by controller/processor in an AWS-native setup focusing on Amazon S3 as the data storage layer, and AWS Glue as the metadata catalog where applicable. Test ingestion of datasets stored in Amazon S3, with metadata schemas registered in AWS Glue, for S3-based objects. Document whether the metadata fields can be captured natively at ingestion or modeled through tags, policies, or glossary extensions. Confirm that metadata is visible in the UI, searchable, filterable, auditable, and enforced where applicable.",DataHub,3
DataHub – REQ-3,"Evaluate DataHub support for enforce retention policies with alert/flag in an AWS-native setup focusing on Amazon S3 as the data storage layer, and AWS Glue as the metadata catalog where applicable. Test ingestion of datasets stored in Amazon S3, with metadata schemas registered in AWS Glue, for S3-based objects. Document whether the metadata fields can be captured natively at ingestion or modeled through tags, policies, or glossary extensions. Confirm that metadata is visible in the UI, searchable, filterable, auditable, and enforced where applicable.",DataHub,5
DataHub – REQ-4,"Evaluate DataHub support for link datasets to sharing agreements in an AWS-native setup focusing on Amazon S3 as the data storage layer, and AWS Glue as the metadata catalog where applicable. Test ingestion of datasets stored in Amazon S3, with metadata schemas registered in AWS Glue, for S3-based objects. Document whether the metadata fields can be captured natively at ingestion or modeled through tags, policies, or glossary extensions. Confirm that metadata is visible in the UI, searchable, filterable, auditable, and enforced where applicable.",DataHub,3
DataHub – REQ-5,"Evaluate DataHub support for assign and audit ownership in an AWS-native setup focusing on Amazon S3 as the data storage layer, and AWS Glue as the metadata catalog where applicable. Test ingestion of datasets stored in Amazon S3, with metadata schemas registered in AWS Glue, for S3-based objects. Document whether the metadata fields can be captured natively at ingestion or modeled through tags, policies, or glossary extensions. Confirm that metadata is visible in the UI, searchable, filterable, auditable, and enforced where applicable.",DataHub,2
DataHub – REQ-6,"Evaluate DataHub support for display permitted use in an AWS-native setup focusing on Amazon S3 as the data storage layer, and AWS Glue as the metadata catalog where applicable. Test ingestion of datasets stored in Amazon S3, with metadata schemas registered in AWS Glue, for S3-based objects. Document whether the metadata fields can be captured natively at ingestion or modeled through tags, policies, or glossary extensions. Confirm that metadata is visible in the UI, searchable, filterable, auditable, and enforced where applicable.",DataHub,2
DataHub – REQ-7,"Evaluate DataHub support for block ingestion without mandatory metadata in an AWS-native setup focusing on Amazon S3 as the data storage layer, and AWS Glue as the metadata catalog where applicable. Test ingestion of datasets stored in Amazon S3, with metadata schemas registered in AWS Glue, for S3-based objects. Document whether the metadata fields can be captured natively at ingestion or modeled through tags, policies, or glossary extensions. Confirm that metadata is visible in the UI, searchable, filterable, auditable, and enforced where applicable.",DataHub,4
